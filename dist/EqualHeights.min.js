/*! Equalheights - v0.1.0 - 2014-04-17
* https://github.com/jacksonhoose/equalheights
* Copyright (c) 2014 Jackson Hoose; Licensed MIT */
"function"!=typeof Object.create&&(Object.create=function(a){function b(){}return b.prototype=a,new b}),function(a){var b={init:function(b,c){this.options=a.extend({},a.fn.equalHeights.options,b),this.$parent=a(c),this.$children=this.options.target.length>1?this.$parent.find(this.options.target):this.$parent.children(),this.breakpoints=this.options.breakpoints,this.debounceEnabled="function"==typeof window._&&"function"==typeof window._.debounce?!0:!1,this.makeEqualHeights=this.makeEqualHeights.bind(this),this.equalize=this.equalize.bind(this),this.checkBreakpoints(),this.start()},breakpoints:[],breakpointParse:{">":function(b){return a(window).width()>b?!0:!1},"<":function(b){return a(window).width()<b?!0:!1},">=":function(b){return a(window).width()>=b?!0:!1},"<=":function(b){return a(window).width()<=b?!0:!1}},filterTallest:function(){var b=this.$children.map(function(){return a(this).outerHeight()}).get();return Math.max.apply(null,b)},checkBreakpoints:function(){if(this.breakpoints.length>=1){for(var b=[],c=this.breakpoints.length-1;c>=0;c--){var d=this.breakpoints[c].split(" ");"function"==typeof this.breakpointParse[d[0]]&&b.push(this.breakpointParse[d[0]](parseInt(d[1],10)))}return 1===a.inArray(!0,b)?!0:!1}},equalize:function(){return this.checkBreakpoints()===!1?void this.destoryEqualheights():void this.makeEqualHeights()},destoryEqualheights:function(){this.$children.css("height","auto")},makeEqualHeights:function(){this.destoryEqualheights(),this.$children.css("height",this.filterTallest())},start:function(){a(window).on({load:this.equalize,resize:this.debounceEnabled===!0?window._.debounce(this.equalize,this.options.debounce):this.equalize})}};a.fn.equalHeights=function(a){return this.each(function(){var c=Object.create(b);c.init(a,this)})},a.fn.equalHeights.options={debounce:500,breakpoints:[]}}(jQuery);